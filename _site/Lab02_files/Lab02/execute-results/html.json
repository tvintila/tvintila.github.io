{
  "hash": "a1b8cf52cb62a3c1d98547b7417f1d5e",
  "result": {
    "markdown": "---\ntitle: \"EPPS 6323: Lab02\"\nauthor: \"Karl Ho\"\nformat: html\neditor: visual\n---\n\n\n# R Programmng Basic Commands\n\n(Adapted from ISLR Chapter 3 Lab: Introduction to R)\n\n## Indexing Data using \\[\\]\n\n\n::: {.cell}\n\n```{.r .cell-code}\nA=matrix(1:16,4,4)\nA\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3] [,4]\n[1,]    1    5    9   13\n[2,]    2    6   10   14\n[3,]    3    7   11   15\n[4,]    4    8   12   16\n```\n:::\n\n```{.r .cell-code}\nA[2,3]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n\n```{.r .cell-code}\nA[c(1,3),c(2,4)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2]\n[1,]    5   13\n[2,]    7   15\n```\n:::\n\n```{.r .cell-code}\nA[1:3,2:4]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    5    9   13\n[2,]    6   10   14\n[3,]    7   11   15\n```\n:::\n\n```{.r .cell-code}\nA[1:2,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3] [,4]\n[1,]    1    5    9   13\n[2,]    2    6   10   14\n```\n:::\n\n```{.r .cell-code}\nA[,1:2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2]\n[1,]    1    5\n[2,]    2    6\n[3,]    3    7\n[4,]    4    8\n```\n:::\n\n```{.r .cell-code}\nA[1,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  1  5  9 13\n```\n:::\n\n```{.r .cell-code}\nA[-c(1,3),]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3] [,4]\n[1,]    2    6   10   14\n[2,]    4    8   12   16\n```\n:::\n\n```{.r .cell-code}\nA[-c(1,3),-c(1,3,4)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6 8\n```\n:::\n\n```{.r .cell-code}\ndim(A)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4 4\n```\n:::\n:::\n\n\n## Loading Data from GitHub\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAuto=read.table(\"https://raw.githubusercontent.com/karlho/knowledgemining/gh-pages/data/Auto.data\")\n# fix(Auto) # Starting the X11 R data editor\nAuto=read.table(\"https://raw.githubusercontent.com/karlho/knowledgemining/gh-pages/data/Auto.data\",header=T,na.strings=\"?\")\n# fix(Auto)\nAuto=read.csv(\"https://raw.githubusercontent.com/karlho/knowledgemining/gh-pages/data/Auto.csv\",header=T,na.strings=\"?\")\n# fix(Auto)\ndim(Auto)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 397   9\n```\n:::\n\n```{.r .cell-code}\nAuto[1:4,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  mpg cylinders displacement horsepower weight acceleration year origin\n1  18         8          307        130   3504         12.0   70      1\n2  15         8          350        165   3693         11.5   70      1\n3  18         8          318        150   3436         11.0   70      1\n4  16         8          304        150   3433         12.0   70      1\n                       name\n1 chevrolet chevelle malibu\n2         buick skylark 320\n3        plymouth satellite\n4             amc rebel sst\n```\n:::\n\n```{.r .cell-code}\nAuto=na.omit(Auto)\ndim(Auto)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 392   9\n```\n:::\n\n```{.r .cell-code}\nnames(Auto)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"mpg\"          \"cylinders\"    \"displacement\" \"horsepower\"   \"weight\"      \n[6] \"acceleration\" \"year\"         \"origin\"       \"name\"        \n```\n:::\n:::\n\n\n## Load data from ISLR website\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAuto=read.table(\"https://www.statlearning.com/s/Auto.data\",header=T,na.strings=\"?\")\ndim(Auto)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 397   9\n```\n:::\n:::\n\n\n## Additional Graphical and Numerical Summaries\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot(cylinders, mpg)\nplot(Auto$cylinders, Auto$mpg)\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nattach(Auto)\nplot(cylinders, mpg)\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n```{.r .cell-code}\ncylinders=as.factor(cylinders)\nplot(cylinders, mpg)\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-3-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(cylinders, mpg, col=\"red\")\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-3-4.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(cylinders, mpg, col=\"red\", varwidth=T)\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-3-5.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(cylinders, mpg, col=\"red\", varwidth=T,horizontal=T)\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-3-6.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(cylinders, mpg, col=\"red\", varwidth=T, xlab=\"cylinders\", ylab=\"MPG\")\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-3-7.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(mpg)\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-3-8.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(mpg,col=2)\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-3-9.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(mpg,col=2,breaks=15)\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-3-10.png){width=672}\n:::\n\n```{.r .cell-code}\n#pairs(Auto)\npairs(~ mpg + displacement + horsepower + weight + acceleration, Auto)\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-3-11.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(horsepower,mpg)\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-3-12.png){width=672}\n:::\n\n```{.r .cell-code}\n# identify(horsepower,mpg,name) # Interactive: point and click the dot to identify cases\nsummary(Auto)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      mpg          cylinders      displacement     horsepower        weight    \n Min.   : 9.00   Min.   :3.000   Min.   : 68.0   Min.   : 46.0   Min.   :1613  \n 1st Qu.:17.50   1st Qu.:4.000   1st Qu.:104.0   1st Qu.: 75.0   1st Qu.:2223  \n Median :23.00   Median :4.000   Median :146.0   Median : 93.5   Median :2800  \n Mean   :23.52   Mean   :5.458   Mean   :193.5   Mean   :104.5   Mean   :2970  \n 3rd Qu.:29.00   3rd Qu.:8.000   3rd Qu.:262.0   3rd Qu.:126.0   3rd Qu.:3609  \n Max.   :46.60   Max.   :8.000   Max.   :455.0   Max.   :230.0   Max.   :5140  \n                                                 NA's   :5                     \n  acceleration        year           origin          name          \n Min.   : 8.00   Min.   :70.00   Min.   :1.000   Length:397        \n 1st Qu.:13.80   1st Qu.:73.00   1st Qu.:1.000   Class :character  \n Median :15.50   Median :76.00   Median :1.000   Mode  :character  \n Mean   :15.56   Mean   :75.99   Mean   :1.574                     \n 3rd Qu.:17.10   3rd Qu.:79.00   3rd Qu.:2.000                     \n Max.   :24.80   Max.   :82.00   Max.   :3.000                     \n                                                                   \n```\n:::\n\n```{.r .cell-code}\nsummary(mpg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   9.00   17.50   23.00   23.52   29.00   46.60 \n```\n:::\n:::\n\n\n## Linear Regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\nptbu=c(\"MASS\",\"ISLR\")\ninstall.packages(ptbu, repos='http://cran.us.r-project.org')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nInstalling packages into 'C:/Users/username/AppData/Local/R/win-library/4.2'\n(as 'lib' is unspecified)\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\npackage 'MASS' successfully unpacked and MD5 sums checked\npackage 'ISLR' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\username\\AppData\\Local\\Temp\\RtmpsxBk2m\\downloaded_packages\n```\n:::\n\n```{.r .cell-code}\nlapply(ptbu, require, character.only = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: MASS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ISLR\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'ISLR'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked _by_ '.GlobalEnv':\n\n    Auto\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[1] TRUE\n\n[[2]]\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nlibrary(MASS)\nlibrary(ISLR)\n\n# Simple Linear Regression\n\n# fix(Boston)\nnames(Boston)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"crim\"    \"zn\"      \"indus\"   \"chas\"    \"nox\"     \"rm\"      \"age\"    \n [8] \"dis\"     \"rad\"     \"tax\"     \"ptratio\" \"black\"   \"lstat\"   \"medv\"   \n```\n:::\n\n```{.r .cell-code}\n# lm.fit=lm(medv~lstat)\nattach(Boston)\nlm.fit=lm(medv~lstat,data=Boston)\nattach(Boston)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from Boston (pos = 3):\n\n    age, black, chas, crim, dis, indus, lstat, medv, nox, ptratio, rad,\n    rm, tax, zn\n```\n:::\n\n```{.r .cell-code}\nlm.fit=lm(medv~lstat)\nlm.fit\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = medv ~ lstat)\n\nCoefficients:\n(Intercept)        lstat  \n      34.55        -0.95  \n```\n:::\n\n```{.r .cell-code}\nsummary(lm.fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = medv ~ lstat)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-15.168  -3.990  -1.318   2.034  24.500 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 34.55384    0.56263   61.41   <2e-16 ***\nlstat       -0.95005    0.03873  -24.53   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.216 on 504 degrees of freedom\nMultiple R-squared:  0.5441,\tAdjusted R-squared:  0.5432 \nF-statistic: 601.6 on 1 and 504 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\nnames(lm.fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"coefficients\"  \"residuals\"     \"effects\"       \"rank\"         \n [5] \"fitted.values\" \"assign\"        \"qr\"            \"df.residual\"  \n [9] \"xlevels\"       \"call\"          \"terms\"         \"model\"        \n```\n:::\n\n```{.r .cell-code}\ncoef(lm.fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept)       lstat \n 34.5538409  -0.9500494 \n```\n:::\n\n```{.r .cell-code}\nconfint(lm.fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                2.5 %     97.5 %\n(Intercept) 33.448457 35.6592247\nlstat       -1.026148 -0.8739505\n```\n:::\n\n```{.r .cell-code}\npredict(lm.fit,data.frame(lstat=(c(5,10,15))), interval=\"confidence\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       fit      lwr      upr\n1 29.80359 29.00741 30.59978\n2 25.05335 24.47413 25.63256\n3 20.30310 19.73159 20.87461\n```\n:::\n\n```{.r .cell-code}\npredict(lm.fit,data.frame(lstat=(c(5,10,15))), interval=\"prediction\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       fit       lwr      upr\n1 29.80359 17.565675 42.04151\n2 25.05335 12.827626 37.27907\n3 20.30310  8.077742 32.52846\n```\n:::\n\n```{.r .cell-code}\n# What is the differnce between \"conference\" and \"prediction\" difference?\n\nplot(lstat,medv)\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot.new()\nabline(lm.fit)\nabline(lm.fit,lwd=3)\nabline(lm.fit,lwd=3,col=\"red\")\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(lstat,medv,col=\"red\")\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-4-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(lstat,medv,pch=16)\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-4-4.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(lstat,medv,pch=\"+\")\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-4-5.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(1:20,1:20,pch=1:20)\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-4-6.png){width=672}\n:::\n\n```{.r .cell-code}\npar(mfrow=c(2,2))\nplot(lm.fit)\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-4-7.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(predict(lm.fit), residuals(lm.fit))\nplot(predict(lm.fit), rstudent(lm.fit))\nplot(hatvalues(lm.fit))\nwhich.max(hatvalues(lm.fit))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n375 \n375 \n```\n:::\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-4-8.png){width=672}\n:::\n:::\n\n\n## Multiple Linear Regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm.fit=lm(medv~lstat+age,data=Boston)\nsummary(lm.fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = medv ~ lstat + age, data = Boston)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-15.981  -3.978  -1.283   1.968  23.158 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 33.22276    0.73085  45.458  < 2e-16 ***\nlstat       -1.03207    0.04819 -21.416  < 2e-16 ***\nage          0.03454    0.01223   2.826  0.00491 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.173 on 503 degrees of freedom\nMultiple R-squared:  0.5513,\tAdjusted R-squared:  0.5495 \nF-statistic:   309 on 2 and 503 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\nlm.fit=lm(medv~.,data=Boston)\nsummary(lm.fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = medv ~ ., data = Boston)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-15.595  -2.730  -0.518   1.777  26.199 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  3.646e+01  5.103e+00   7.144 3.28e-12 ***\ncrim        -1.080e-01  3.286e-02  -3.287 0.001087 ** \nzn           4.642e-02  1.373e-02   3.382 0.000778 ***\nindus        2.056e-02  6.150e-02   0.334 0.738288    \nchas         2.687e+00  8.616e-01   3.118 0.001925 ** \nnox         -1.777e+01  3.820e+00  -4.651 4.25e-06 ***\nrm           3.810e+00  4.179e-01   9.116  < 2e-16 ***\nage          6.922e-04  1.321e-02   0.052 0.958229    \ndis         -1.476e+00  1.995e-01  -7.398 6.01e-13 ***\nrad          3.060e-01  6.635e-02   4.613 5.07e-06 ***\ntax         -1.233e-02  3.760e-03  -3.280 0.001112 ** \nptratio     -9.527e-01  1.308e-01  -7.283 1.31e-12 ***\nblack        9.312e-03  2.686e-03   3.467 0.000573 ***\nlstat       -5.248e-01  5.072e-02 -10.347  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.745 on 492 degrees of freedom\nMultiple R-squared:  0.7406,\tAdjusted R-squared:  0.7338 \nF-statistic: 108.1 on 13 and 492 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\nlibrary(car)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: carData\n```\n:::\n\n```{.r .cell-code}\nvif(lm.fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    crim       zn    indus     chas      nox       rm      age      dis \n1.792192 2.298758 3.991596 1.073995 4.393720 1.933744 3.100826 3.955945 \n     rad      tax  ptratio    black    lstat \n7.484496 9.008554 1.799084 1.348521 2.941491 \n```\n:::\n\n```{.r .cell-code}\nlm.fit1=lm(medv~.-age,data=Boston)\nsummary(lm.fit1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = medv ~ . - age, data = Boston)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-15.6054  -2.7313  -0.5188   1.7601  26.2243 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  36.436927   5.080119   7.172 2.72e-12 ***\ncrim         -0.108006   0.032832  -3.290 0.001075 ** \nzn            0.046334   0.013613   3.404 0.000719 ***\nindus         0.020562   0.061433   0.335 0.737989    \nchas          2.689026   0.859598   3.128 0.001863 ** \nnox         -17.713540   3.679308  -4.814 1.97e-06 ***\nrm            3.814394   0.408480   9.338  < 2e-16 ***\ndis          -1.478612   0.190611  -7.757 5.03e-14 ***\nrad           0.305786   0.066089   4.627 4.75e-06 ***\ntax          -0.012329   0.003755  -3.283 0.001099 ** \nptratio      -0.952211   0.130294  -7.308 1.10e-12 ***\nblack         0.009321   0.002678   3.481 0.000544 ***\nlstat        -0.523852   0.047625 -10.999  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.74 on 493 degrees of freedom\nMultiple R-squared:  0.7406,\tAdjusted R-squared:  0.7343 \nF-statistic: 117.3 on 12 and 493 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\nlm.fit1=update(lm.fit, ~.-age)\n```\n:::\n\n\n## Non-linear Transformations of the Predictors\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm.fit2=lm(medv~lstat+I(lstat^2))\nsummary(lm.fit2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = medv ~ lstat + I(lstat^2))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-15.2834  -3.8313  -0.5295   2.3095  25.4148 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 42.862007   0.872084   49.15   <2e-16 ***\nlstat       -2.332821   0.123803  -18.84   <2e-16 ***\nI(lstat^2)   0.043547   0.003745   11.63   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.524 on 503 degrees of freedom\nMultiple R-squared:  0.6407,\tAdjusted R-squared:  0.6393 \nF-statistic: 448.5 on 2 and 503 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\nlm.fit=lm(medv~lstat)\nanova(lm.fit,lm.fit2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nModel 1: medv ~ lstat\nModel 2: medv ~ lstat + I(lstat^2)\n  Res.Df   RSS Df Sum of Sq     F    Pr(>F)    \n1    504 19472                                 \n2    503 15347  1    4125.1 135.2 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\npar(mfrow=c(2,2))\nplot(lm.fit2)\n```\n\n::: {.cell-output-display}\n![](Lab02_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlm.fit5=lm(medv~poly(lstat,5))\nsummary(lm.fit5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = medv ~ poly(lstat, 5))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-13.5433  -3.1039  -0.7052   2.0844  27.1153 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       22.5328     0.2318  97.197  < 2e-16 ***\npoly(lstat, 5)1 -152.4595     5.2148 -29.236  < 2e-16 ***\npoly(lstat, 5)2   64.2272     5.2148  12.316  < 2e-16 ***\npoly(lstat, 5)3  -27.0511     5.2148  -5.187 3.10e-07 ***\npoly(lstat, 5)4   25.4517     5.2148   4.881 1.42e-06 ***\npoly(lstat, 5)5  -19.2524     5.2148  -3.692 0.000247 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.215 on 500 degrees of freedom\nMultiple R-squared:  0.6817,\tAdjusted R-squared:  0.6785 \nF-statistic: 214.2 on 5 and 500 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\nsummary(lm(medv~log(rm),data=Boston))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = medv ~ log(rm), data = Boston)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-19.487  -2.875  -0.104   2.837  39.816 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  -76.488      5.028  -15.21   <2e-16 ***\nlog(rm)       54.055      2.739   19.73   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.915 on 504 degrees of freedom\nMultiple R-squared:  0.4358,\tAdjusted R-squared:  0.4347 \nF-statistic: 389.3 on 1 and 504 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n## Qualitative Predictors\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# fix(Carseats)\nnames(Carseats)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Sales\"       \"CompPrice\"   \"Income\"      \"Advertising\" \"Population\" \n [6] \"Price\"       \"ShelveLoc\"   \"Age\"         \"Education\"   \"Urban\"      \n[11] \"US\"         \n```\n:::\n\n```{.r .cell-code}\nlm.fit=lm(Sales~.+Income:Advertising+Price:Age,data=Carseats)\nsummary(lm.fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Sales ~ . + Income:Advertising + Price:Age, data = Carseats)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.9208 -0.7503  0.0177  0.6754  3.3413 \n\nCoefficients:\n                     Estimate Std. Error t value Pr(>|t|)    \n(Intercept)         6.5755654  1.0087470   6.519 2.22e-10 ***\nCompPrice           0.0929371  0.0041183  22.567  < 2e-16 ***\nIncome              0.0108940  0.0026044   4.183 3.57e-05 ***\nAdvertising         0.0702462  0.0226091   3.107 0.002030 ** \nPopulation          0.0001592  0.0003679   0.433 0.665330    \nPrice              -0.1008064  0.0074399 -13.549  < 2e-16 ***\nShelveLocGood       4.8486762  0.1528378  31.724  < 2e-16 ***\nShelveLocMedium     1.9532620  0.1257682  15.531  < 2e-16 ***\nAge                -0.0579466  0.0159506  -3.633 0.000318 ***\nEducation          -0.0208525  0.0196131  -1.063 0.288361    \nUrbanYes            0.1401597  0.1124019   1.247 0.213171    \nUSYes              -0.1575571  0.1489234  -1.058 0.290729    \nIncome:Advertising  0.0007510  0.0002784   2.698 0.007290 ** \nPrice:Age           0.0001068  0.0001333   0.801 0.423812    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.011 on 386 degrees of freedom\nMultiple R-squared:  0.8761,\tAdjusted R-squared:  0.8719 \nF-statistic:   210 on 13 and 386 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\nattach(Carseats)\ncontrasts(ShelveLoc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       Good Medium\nBad       0      0\nGood      1      0\nMedium    0      1\n```\n:::\n:::\n\n\n## Interaction Terms (including interaction and single effects)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(lm(medv~lstat*age,data=Boston))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = medv ~ lstat * age, data = Boston)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-15.806  -4.045  -1.333   2.085  27.552 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 36.0885359  1.4698355  24.553  < 2e-16 ***\nlstat       -1.3921168  0.1674555  -8.313 8.78e-16 ***\nage         -0.0007209  0.0198792  -0.036   0.9711    \nlstat:age    0.0041560  0.0018518   2.244   0.0252 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.149 on 502 degrees of freedom\nMultiple R-squared:  0.5557,\tAdjusted R-squared:  0.5531 \nF-statistic: 209.3 on 3 and 502 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n",
    "supporting": [
      "Lab02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}